{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-book/add-book.component.ts","webpack:///src/app/components/add-book/add-book.component.html","webpack:///src/app/components/book-item-detail/book-item-detail.component.ts","webpack:///src/app/components/book-item-detail/book-item-detail.component.html","webpack:///src/app/components/book-item/book-item.component.ts","webpack:///src/app/components/book-item/book-item.component.html","webpack:///src/app/components/comment/comment.component.ts","webpack:///src/app/components/comment/comment.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/review/review.component.ts","webpack:///src/app/components/review/review.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/components/user-profile/user-profile.component.ts","webpack:///src/app/components/user-profile/user-profile.component.html","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/auth.interceptor.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AddBookComponent","dataService","router","formGroup","author","year","publisher","cover","shouldShowError","value","document","getElementById","style","display","book","addOrUpdateBook","subscribe","result","navigate","error","addNewBook","BookItemDetailComponent","auth","route","bookId","params","getData","getBookById","data","getDataComments","getDataReviews","getCommentsForBookId","comments","getReviewForBookId","reviews","elem","getUserByEmail","currentUser","sub","postComment","user","createComment","comment","userId","postReview","createReview","review","BookItemComponent","getBooks","deleteBook","emit","CommentComponent","userService","name","surname","email","admin","password","getUserById","HomeComponent","authService","getAllBooks","scrollToTop","isLoggedIn","button","querySelector","addEventListener","window","scrollTo","top","left","behavior","$event","target","searchBook","books","response","LoginComponent","login","authenticate","console","log","onSubmit","NavbarComponent","logout","ReviewComponent","SignupComponent","credentials","hashStr","addUser","create","UserProfileComponent","myForm","getUser","controls","trim","createUser","setValue","updateUser","AuthGuard","providedIn","AuthInterceptor","request","next","localStorage","getItem","clone","setHeaders","Authorization","handle","AuthService","http","url","get","post","put","pipe","token","setItem","removeItem","jwtHelper","isTokenExpired","getToken","decodeToken","DataService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from \"./components/home/home.component\";\r\nimport {SignupComponent} from \"./components/signup/signup.component\";\r\nimport {LoginComponent} from \"./components/login/login.component\";\r\nimport {BookItemDetailComponent} from './components/book-item-detail/book-item-detail.component';\r\nimport {UserProfileComponent} from \"./components/user-profile/user-profile.component\";\r\nimport {AuthGuard} from \"./services/auth.guard\";\r\nimport {AddBookComponent} from \"./components/add-book/add-book.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'book/:id',\r\n    component: BookItemDetailComponent\r\n  },\r\n  {\r\n    path: 'user',\r\n    component: UserProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'addBook',\r\n    component: AddBookComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'bookweb';\r\n}\r\n","<navbar></navbar>\r\n<router-outlet></router-outlet>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {LoginComponent} from './components/login/login.component';\r\nimport {NavbarComponent} from './components/navbar/navbar.component';\r\nimport {SignupComponent} from './components/signup/signup.component';\r\nimport {AddBookComponent} from './components/add-book/add-book.component';\r\nimport {BookItemComponent} from './components/book-item/book-item.component';\r\nimport {BookItemDetailComponent} from './components/book-item-detail/book-item-detail.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {AuthInterceptor} from './services/auth.interceptor';\r\nimport { CommentComponent } from './components/comment/comment.component';\r\nimport { ReviewComponent } from './components/review/review.component';\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    SignupComponent,\r\n    AddBookComponent,\r\n    BookItemComponent,\r\n    BookItemDetailComponent,\r\n    CommentComponent,\r\n    ReviewComponent,\r\n    UserProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {Book, CreateBook} from '../../models/book';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styleUrls: ['./add-book.component.css']\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n  formGroup = new FormGroup({\r\n    title: new FormControl(''),\r\n    author: new FormControl(''),\r\n    year: new FormControl(''),\r\n    publisher: new FormControl(''),\r\n    cover: new FormControl(''),\r\n  });\r\n\r\n  book: CreateBook;\r\n  shouldShowError = false;\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addNewBook(){\r\n    if (this.formGroup.value.title === '' ||\r\n      this.formGroup.value.author === '' ||\r\n      this.formGroup.value.year === '' ||\r\n      this.formGroup.value.publisher === ''\r\n    ){\r\n      document.getElementById('warning').style.display = 'block';\r\n    }else{\r\n      this.book = {\r\n        title: this.formGroup.value.title,\r\n        author: this.formGroup.value.author,\r\n        year: this.formGroup.value.year,\r\n        publisher: this.formGroup.value.publisher,\r\n        cover: this.formGroup.value.cover\r\n      };\r\n\r\n      this.dataService.addOrUpdateBook(this.book).subscribe((result) => {\r\n        this.router.navigate(['']);\r\n      }, error => {\r\n        this.shouldShowError = true;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-4 col-sm-4 col-md-4\">\r\n      <div id=\"image\">\r\n        <img src=\"../../../assets/images/book.png\" class=\"card-img-top\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-8 col-sm-8 col-md-8\">\r\n      <div style=\"margin-right: 20%; margin-top: 20%;\">\r\n        <h5 style=\"text-align: center;font-size: 50px;\">Formularz dodawania książki:</h5>\r\n        <form [formGroup]=\"formGroup\" (ngSubmit)=\"addNewBook()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"inputTitle\">Tytuł</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"inputTitle\" placeholder=\"Podaj tytuł\" formControlName=\"title\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"inputAuthor\">Podaj autora:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"inputAuthor\" placeholder=\"Podaj autora\" formControlName=\"author\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"inputYear\">Rok wydania:</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"inputYear\" aria-describedby=\"emailHelp\" placeholder=\"Podaj rok wydania\" formControlName=\"year\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"inputPublisher\">Wydawca</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"inputPublisher\" placeholder=\"Podaj wydawce\" formControlName=\"publisher\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"inputCover\">Link do okładki</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"inputCover\" placeholder=\"Link do okładki\" formControlName=\"cover\">\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Dodaj książke</button>\r\n        </form>\r\n        <h3 style=\"display: none; font-size: 40px;text-align: center;color: red; margin-top: 2%;\" id=\"warning\">Niepoprawne lub puste dane!</h3>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Book} from '../../models/book';\r\nimport {CreateReview, Review} from '../../models/review';\r\nimport {Comment, CreateComment} from '../../models/comment';\r\nimport {DataService} from '../../services/data.service';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {User} from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'book-item-detail',\r\n  templateUrl: './book-item-detail.component.html',\r\n  styleUrls: ['./book-item-detail.component.css']\r\n})\r\nexport class BookItemDetailComponent implements OnInit {\r\n  id: number;\r\n  book: Book = {\r\n    title: '', cover: '', year: 0, publisher: '', bookId: -1, author: ''\r\n  };\r\n  comments: Comment[];\r\n  reviews: Review[];\r\n\r\n  constructor(private dataService: DataService, public auth: AuthService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.params.subscribe(params => {\r\n      this.id = params.id;\r\n    });\r\n\r\n    this.getData();\r\n\r\n  }\r\n\r\n  getData(){\r\n    if (this.book.title === ''){\r\n      this.dataService.getBookById(this.id).subscribe(data => {\r\n        this.book = data as Book;\r\n      });\r\n    }\r\n    this.getDataComments();\r\n    this.getDataReviews();\r\n  }\r\n\r\n  getDataComments(){\r\n    this.dataService.getCommentsForBookId(this.id).subscribe(data => {\r\n      this.comments = data as Comment[];\r\n    });\r\n  }\r\n\r\n  getDataReviews(){\r\n    this.dataService.getReviewForBookId(this.id).subscribe(data => {\r\n      this.reviews = data as Review[];\r\n    });\r\n  }\r\n\r\n\r\n  onCommentAdded() {\r\n    const elem = (document.getElementById('textAreaComment') as HTMLInputElement);\r\n    const value = elem.value;\r\n    elem.value = '';\r\n\r\n    this.auth.getUserByEmail(this.auth.currentUser.sub).subscribe(data => {\r\n      this.postComment(data as User, value);\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n  postComment(user: User, value: string){\r\n    const createComment: CreateComment = {\r\n      bookId: this.book.bookId, comment: value, userId: user.userId\r\n\r\n    };\r\n    this.dataService.createComment(createComment).subscribe(data => {\r\n      this.getDataComments();\r\n    });\r\n  }\r\n\r\n  onReviewAdded() {\r\n    const elem = (document.getElementById('textAreaReview') as HTMLInputElement);\r\n    const value = elem.value;\r\n    elem.value = '';\r\n\r\n    this.auth.getUserByEmail(this.auth.currentUser.sub).subscribe(data => {\r\n      this.postReview(data as User, value);\r\n\r\n    });\r\n  }\r\n\r\n  postReview(user: User, value: string){\r\n    const createReview: CreateReview  = {\r\n      bookId: this.book.bookId, review: value, userId: user.userId\r\n\r\n    };\r\n    this.dataService.createReview(createReview).subscribe(data => {\r\n      this.getDataReviews();\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid\" style=\"padding-top: 100px; font-family: 'Noto Sans'\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-5 d-flex justify-content-around\">\r\n      <img [src]=\"book.cover\" alt=\"Image\" class=\"card-img-top\" onerror=\"this.onerror=null; this.src='assets/images/default_book_cover.jpg'\">\r\n    </div>\r\n    <div class=\"col-lg-7\">\r\n      <h5 class=\"card-title\" style=\"font-size: 60px\">\r\n        {{book.title}}\r\n      </h5>\r\n      <div class=\"bookInfo\">\r\n        <p class=\"card-text\">Autor książki: {{book.author}}</p>\r\n        <p class=\"card-text\">Wydawca: {{book.publisher}}</p>\r\n        <p class=\"card-text\">Rok wydania: {{book.year}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n  </div>\r\n  <div *ngIf=\"auth.isLoggedIn()\" class=\"container-fluid\" id=\"Logged\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"sectionCommentsReviews\">\r\n          <h5 style=\"text-align: center\">Recenzja książki:</h5>\r\n          <div class=\"row bootstrap snippets\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"comment-wrapper\">\r\n                <div class=\"panel panel-info\">\r\n                  <div class=\"panel-heading\">\r\n                    Panel recenzji\r\n                  </div>\r\n                  <div class=\"panel-body\">\r\n                    <textarea id=\"textAreaReview\" class=\"form-control\" placeholder=\"Napisz recenzję...\" rows=\"3\"></textarea>\r\n                    <br>\r\n                    <button (click)=\"onReviewAdded()\" type=\"button\" class=\"btn btn-info pull-right\">Dodaj recenzje</button>\r\n                    <div class=\"clearfix\"></div>\r\n                    <hr>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div *ngFor=\"let review of reviews\">\r\n            <app-review [review]=\"review\"></app-review>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"sectionCommentsReviews\">\r\n          <h5 style=\"text-align: center\">Sekcja komentarzy: </h5>\r\n          <div class=\"row bootstrap snippets\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"comment-wrapper\">\r\n                <div class=\"panel panel-info\">\r\n                  <div class=\"panel-heading\">\r\n                    Panel komentarzy\r\n                  </div>\r\n                  <div class=\"panel-body\">\r\n                    <textarea id=\"textAreaComment\" class=\"form-control\" placeholder=\"Napisz komentarz...\" rows=\"3\"></textarea>\r\n                    <br>\r\n                    <button type=\"button\" (click)=\"onCommentAdded()\" class=\"btn btn-info pull-right\">Dodaj komentarz</button>\r\n                    <div class=\"clearfix\"></div>\r\n                    <hr>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div *ngFor=\"let comment of comments\">\r\n            <app-comment [comment]=\"comment\"></app-comment>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!auth.isLoggedIn()\" class=\"notLogged\">\r\n    <p><a [routerLink]=\"['/login']\">Zaloguj się </a>aby widzieć komentarze i recenzje</p>\r\n  </div>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Book} from '../../models/book';\r\nimport {DataService} from '../../services/data.service';\r\n\r\n@Component({\r\n  selector: 'book-item',\r\n  templateUrl: './book-item.component.html',\r\n  styleUrls: ['./book-item.component.css']\r\n})\r\nexport class BookItemComponent implements OnInit {\r\n  @Input() book: Book;\r\n  @Input() isAdmin: boolean;\r\n  @Output() getBooks = new EventEmitter<boolean>();\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  deleteBook() {\r\n    this.dataService.deleteBook(this.book.bookId).subscribe(\r\n      data => {\r\n        this.getBooks.emit(true);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"card\" style=\"width: 18rem; border: 1px solid black;\">\r\n  <img [src]=\"book.cover\" alt=\"Image\" class=\"card-img-top\" onerror=\"this.onerror=null; this.src='assets/images/default_book_cover.jpg'\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">{{book.title}}</h5>\r\n    <p class=\"card-text\">Autor: {{book.author}}</p>\r\n    <p class=\"card-text\">Wydawca: {{book.publisher}}</p>\r\n    <a [routerLink]=\"['book',book.bookId]\" [state]=\"{data: book}\" class=\"btn btn-primary\">Więcej o książce</a>\r\n    <i class=\"fa fa-times\" aria-hidden=\"true\" id=\"exitButton\" *ngIf=\"isAdmin\" type=\"button\" (click)=\"deleteBook()\"></i>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Comment} from '../../models/comment';\r\nimport {User} from '../../models/user';\r\nimport {AuthService} from '../../services/auth.service';\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.css']\r\n})\r\nexport class CommentComponent implements OnInit {\r\n\r\n  @Input() comment: Comment;\r\n  user = {\r\n    name: '', surname: '', email: '', admin: false, userId: -1, password: ''\r\n  };\r\n\r\n  constructor(private userService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserById(this.comment.userId).subscribe(data => {\r\n      this.user = data as User;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row bootstrap snippets\">\r\n  <div class=\"col-lg-12\">\r\n    <div class=\"comment-wrapper\">\r\n          <ul class=\"media-list\">\r\n            <li class=\"media\">\r\n              <div class=\"media-body\">\r\n                <strong class=\"text-success\">{{user.name}} {{user.surname}}</strong>\r\n                <p>\r\n                  {{comment.comment}}\r\n                </p>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport {Book} from '../../models/book';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {User} from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  books: Book[];\r\n  admin = false;\r\n\r\n  constructor(private dataService: DataService, public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBooks();\r\n    this.scrollToTop();\r\n    if (this.authService.isLoggedIn()){\r\n      this.authService.getUserByEmail(this.authService.currentUser.sub).subscribe(\r\n        data => {\r\n          const user = data as User;\r\n          this.admin = user.admin;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  scrollToTop(){\r\n    const button = document.querySelector('#scroll');\r\n    button.addEventListener('click', () => {\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth'\r\n      });\r\n    });\r\n  }\r\n\r\n  searchBook($event: Event) {\r\n    if ((($event.target as HTMLInputElement).value) === ''){\r\n      this.getAllBooks();\r\n    }else{\r\n      this.dataService.searchBook(($event.target as HTMLInputElement).value).subscribe(\r\n        data => {\r\n          this.books = data as Book[];\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getAllBooks(){\r\n    this.dataService.getAllBooks().subscribe(\r\n      response => {\r\n        this.books = response as Book[];\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div id=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\" style=\"border-bottom: 1px solid black;\">\r\n      <div class=\"col-lg-6 d-flex justify-content-around\">\r\n          <div class=\"topLogo\">\r\n            <h5 class=\"logo\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i>BookWeb</h5>\r\n          </div>\r\n      </div>\r\n      <div class=\"col-lg-6 d-flex justify-content-around\">\r\n        <div class=\"topSearch\">\r\n          <input type=\"text\" placeholder=\"Wyszukaj książkę\" class=\"search-text\" (keyup)=\"searchBook($event)\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-8\">\r\n        <h5 class=\"book\">Wszystkie książki:</h5>\r\n      </div>\r\n      <div class=\"col-lg-4\" *ngIf=\"authService.isLoggedIn()\">\r\n        <div id=\"button\">\r\n          <a href=\"#\" class=\"addBookButton\" [routerLink]=\"['/addBook']\">Dodaj książke</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div *ngFor=\"let book of books\" class=\"col-lg-4 d-flex justify-content-around\" id=\"row\">\r\n            <book-item [book]=\"book\" [isAdmin]=\"this.admin\" (getBooks)=\"getAllBooks()\"></book-item>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <button id=\"scroll\" (click)=\"scrollToTop()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  formGroup = new FormGroup({\r\n    login: new FormControl(''),\r\n    password: new FormControl('')\r\n  });\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(){\r\n    this.authService.authenticate({login : this.formGroup.value.login, password: this.formGroup.value.password}).subscribe(\r\n      data =>\r\n      {\r\n        this.router.navigate(['/']);\r\n        console.log(data);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div id=\"loginMain\">\r\n  <div id=\"form\">\r\n    <h1 class=\"entry-title\"><span>Zaloguj się</span></h1>\r\n    <hr>\r\n    <form id=\"loginForm\" [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"login\" mat-dialog-title>E-Mail</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"login\" formControlName=\"login\" placeholder=\"Enter Login\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\" mat-dialog-title>Hasło</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" placeholder=\"Password\">\r\n      </div>\r\n      <button type=\"submit\"class=\"btn btn-primary\">Zaloguj się</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(private router: Router, public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","<div id=\"navbar\">\r\n  <nav>\r\n    <ul class=\"nav\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/']\">Strona główna</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"!authService.isLoggedIn()\">\r\n        <a href=\"\" class=\"nav-link\" [routerLink]=\"['/login']\">Zaloguj</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"authService.isLoggedIn()\">\r\n        <a href=\"\" class=\"nav-link\" (click)=\"logout()\">Wyloguj</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"!authService.isLoggedIn()\">\r\n        <a href=\"\" class=\"nav-link\" [routerLink]=\"['/signup']\">Zarejestruj</a>\r\n      </li>\r\n      <li *ngIf=\"authService.isLoggedIn()\" class=\"d-flex justify-content-around\" id=\"icon\">\r\n        <p>Twój profil<br><a [routerLink]=\"['/user']\" class=\"profileIcon\"><i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i></a></p>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Review} from '../../models/review';\r\nimport {User} from '../../models/user';\r\nimport {AuthService} from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-review',\r\n  templateUrl: './review.component.html',\r\n  styleUrls: ['./review.component.css']\r\n})\r\nexport class ReviewComponent implements OnInit {\r\n\r\n  @Input() review: Review;\r\n  user = {\r\n    name: '', surname: '', email: '', admin: false, userId: -1, password: ''\r\n  };\r\n\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getUserById(this.review.userId).subscribe(data => {\r\n      this.user = data as User;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row bootstrap snippets\">\r\n  <div class=\"col-lg-12\">\r\n    <div class=\"comment-wrapper\">\r\n      <ul class=\"media-list\">\r\n        <li class=\"media\">\r\n          <div class=\"media-body\">\r\n            <strong class=\"text-success\">{{user.name}} {{user.surname}}</strong>\r\n            <p>\r\n              {{review.review}}\r\n            </p>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Md5} from 'ts-md5';\r\nimport {CreateUser} from '../../models/user';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  public credentials = {\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    password: '',\r\n    admin: false\r\n  };\r\n\r\n  user: CreateUser;\r\n\r\n  shouldShowError = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  create() {\r\n    this.user = {\r\n      name: this.credentials.name,\r\n      surname: this.credentials.surname,\r\n      email: this.credentials.email,\r\n      password: Md5.hashStr(this.credentials.password) as string,\r\n      admin: false\r\n    };\r\n\r\n    this.authService.addUser(this.user).subscribe((result) => {\r\n      this.router.navigate(['/login']);\r\n    }, error => {\r\n      this.shouldShowError = true;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<section class=\"signup\">\r\n  <div id=\"formSignUp\">\r\n    <h1 class=\"entry-title\"><span>Zarejestruj się</span></h1>\r\n    <hr>\r\n    <form class=\"form-horizontal\" method=\"post\" name=\"signup\" id=\"signup\">\r\n      <div class=\"form-group\">\r\n        <div class=\"form-group\">\r\n          <label class=\"control-label col-sm-3\">Podaj imię</label>\r\n          <div class=\"col-md-8 col-sm-9\">\r\n            <input type=\"text\" class=\"form-control\" name=\"mem_name\" id=\"mem_name\" placeholder=\"Wpisz imię\" value=\"\"\r\n                   [(ngModel)]=\"credentials.name\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"control-label col-sm-3\">Podaj Nazwisko</label>\r\n          <div class=\"col-md-8 col-sm-9\">\r\n            <input type=\"text\" class=\"form-control\" name=\"mem_name\" placeholder=\"Wpisz imię\" [(ngModel)]=\"credentials.surname\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-8 col-sm-9\">\r\n          <label *ngIf=\"shouldShowError\">Niepoprawny email lub dane</label>\r\n          <label>Podaj Email</label>\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\r\n            <input type=\"email\" class=\"form-control\" name=\"emailid\" placeholder=\"Podaj swój email\"\r\n                   value=\"\" [(ngModel)]=\"credentials.email\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"control-label col-sm-3\">Ustaw hasło</label>\r\n        <div class=\"col-md-5 col-sm-8\">\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\r\n            <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\"\r\n                   placeholder=\"Wpisz hasło (5-15 znaków)\" value=\"\" [(ngModel)]=\"credentials.password\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\" id=\"buttonSubmit\">\r\n        <div class=\"col-xs-offset-3 col-xs-10\">\r\n          <button (click)=\"create()\" name=\"Submit\" type=\"submit\" class=\"btn btn-primary\">Zarejestruj\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</section>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {User} from '../../models/user';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {Md5} from 'ts-md5';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n\r\n  myForm: FormGroup = new FormGroup(\r\n    {\r\n      name: new FormControl(''),\r\n      surname: new FormControl(''),\r\n      password: new FormControl(''),\r\n    }\r\n  );\r\n\r\n  user: User = {\r\n    admin: false, email: '', name: '', password: '', surname: '', userId: 0\r\n  };\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser(this.authService.currentUser.sub);\r\n  }\r\n\r\n  getUser(email){\r\n    this.authService.getUserByEmail(email).subscribe(\r\n      data =>\r\n      {\r\n        this.user = data as User;\r\n      }\r\n    , error => console.log(error));\r\n  }\r\n\r\n  onSubmit() {\r\n    const name = this.myForm.controls.name.value.trim();\r\n    const surname = this.myForm.controls.surname.value.trim();\r\n    const password = this.myForm.controls.password.value.trim();\r\n\r\n    const createUser: User = {\r\n      userId: this.user.userId,\r\n      admin: false,\r\n      email: this.user.email,\r\n      name: this.user.name,\r\n      password: this.user.password,\r\n      surname: this.user.surname\r\n    };\r\n\r\n    if (name === '' && surname === '' && password === '') {\r\n      return;\r\n    }else{\r\n      if (name !== ''){\r\n        createUser.name = name;\r\n        this.myForm.controls.name.setValue('');\r\n      }\r\n      if (surname !== ''){\r\n        createUser.surname = surname;\r\n        this.myForm.controls.surname.setValue('');\r\n      }\r\n      if (password !== ''){\r\n        createUser.password = Md5.hashStr(password) as string;\r\n        this.myForm.controls.password.setValue('');\r\n      }\r\n    }\r\n\r\n    this.authService.updateUser(createUser).subscribe(response => {\r\n      this.authService.getUserById(createUser.userId).subscribe(data => {\r\n        this.user = data as User;\r\n        document.getElementById('changeSucess').style.display = 'block';\r\n      }, error => console.log(error));\r\n    }, error => console.log(error));\r\n\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-6 col-sm-6 col-md-6\">\r\n      <div id=\"image\">\r\n          <img src=\"../../../assets/images/user.jpg\" class=\"card-img-top\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-6 col-sm-6 col-md-6\">\r\n      <div style=\"margin-right: 30%; margin-top: 20%;\">\r\n        <h5 style=\"text-align: center;font-size: 50px;\">Zmień swoje dane:</h5>\r\n        <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"inputName\">Imię:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"inputName\" placeholder=\"{{user.name}}\" formControlName=\"name\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"inputSurname\">Nazwisko:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"inputSurname\" placeholder=\"{{user.surname}}\" formControlName=\"surname\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"inputPassword\">Password:</label>\r\n            <input type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" formControlName=\"password\">\r\n          </div>\r\n          <button type=\"submit\" [disabled]=\"!myForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n      </div>\r\n      <h3 style=\"display: none; font-size: 40px;text-align: center;color: green; margin-top: 2%;\" id=\"changeSucess\">Udało ci się zmienić dane</h3>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService) {\r\n  }\r\n  canActivate(){\r\n    if (this.authService.isLoggedIn()){\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n   if (localStorage.getItem('token') != null){\r\n     request = request.clone({\r\n       setHeaders: {\r\n         Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n       }\r\n     });\r\n   }\r\n\r\n\r\n   return next.handle(request);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {JwtHelper} from 'angular2-jwt';\r\nimport {Token} from '../models/token';\r\nimport {Md5} from 'ts-md5';\r\nimport {CreateUser, User} from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private url = 'http://localhost:8080/';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllUsers(){\r\n    return this.http.get(this.url + 'api/users');\r\n  }\r\n\r\n  getUserById(id){\r\n    return this.http.get(this.url + 'api/users/id/' + id);\r\n  }\r\n\r\n  addUser(user){\r\n    return this.http.post(`${this.url}api/users/create`, user);\r\n  }\r\n\r\n  getUserByEmail(email){\r\n    return this.http.get(this.url + 'api/users/email/' + email);\r\n  }\r\n\r\n  deleteUser(id){\r\n    return this.http.delete(`${this.url}api/users/id/` + id);\r\n  }\r\n\r\n  banUser(id){\r\n    return this.http.post(`${this.url}api/userBan/`, id);\r\n  }\r\n\r\n  updateUser(createUser: User){\r\n    return this.http.put(`${this.url}api/users/update`, createUser);\r\n  }\r\n\r\n  authenticate(credentials){\r\n    return this.http.post(this.url + 'auth', {\r\n      login: credentials.login,\r\n      password: Md5.hashStr(credentials.password) as string\r\n    }).pipe(\r\n      map((result: Token) => {\r\n        if (result && result.token) {\r\n          localStorage.setItem('token', result.token);\r\n\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  isLoggedIn() {\r\n    const jwtHelper = new JwtHelper();\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      return false;\r\n    }\r\n    return !(jwtHelper.isTokenExpired(token));\r\n  }\r\n\r\n  get currentUser() {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      return null;\r\n    }\r\n\r\n    return new JwtHelper().decodeToken(token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {CreateComment} from '../models/comment';\r\nimport {CreateReview} from '../models/review';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  private url = 'http://localhost:8080/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllBooks(){\r\n    return this.http.get(this.url + 'api/books');\r\n  }\r\n\r\n  addOrUpdateBook(book){\r\n    return this.http.post(`${this.url}api/books`, book);\r\n  }\r\n\r\n  getBookById(id){\r\n    return this.http.get(this.url + 'api/books/' + id);\r\n  }\r\n\r\n  deleteBook(id){\r\n    return this.http.delete(`${this.url}api/books/` + id);\r\n  }\r\n\r\n  getCommentsForBookId(id: number){\r\n    return this.http.get(this.url + 'api/comments/book/' + id);\r\n  }\r\n\r\n  getReviewForBookId(id: number){\r\n    return this.http.get(`${this.url}api/reviews/book/${id}`);\r\n  }\r\n\r\n  createComment(comment: CreateComment){\r\n    return this.http.post(`${this.url}api/comments`, comment);\r\n  }\r\n\r\n  createReview(review: CreateReview){\r\n    return this.http.post(`${this.url}api/reviews`, review);\r\n  }\r\n\r\n  searchBook(book: string){\r\n    return this.http.get(this.url + 'api/searchBook/' + book);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}